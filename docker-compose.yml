version: "3.3"

services:
  zookeeper:
    image: zookeeper:3.4.13
    restart: always
    ports:
      - 2181:2181
      - 2888
      - 3888
    environment:
      ZOO_MY_ID: 1
      ZOO_TICK_TIME: 2000
      ZOO_INIT_LIMIT: 5
      ZOO_SYNC_LIMIT: 2
      ZOO_MAX_CLIENT_CNXNS: 60
      ZOO_STANDALONE_ENABLED: 'true'
      ZOO_SERVERS: 'server.1=0.0.0.0:2888:3888'

    volumes:
      - ./kafka/zookeeper/data:/data
#      - ./kafka/zookeeper/datalog:/datalog

  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    restart: always
    ports:
      - 9092:9092
      - 9998:9998
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /kafka/logs
    depends_on:
      - zookeeper
    links:
      - zookeeper
    volumes:
#      - ./kafka/broker/kafka-logs:/kafka
#      - ./kafka/broker/logs:/logs
      - ./kafka/broker/data:/data

  psql_stats:
    image: postgres:12.0-alpine
    expose:
      - 5432
    volumes:
      - psql_stats_volume:/var/lib/postgresql/data/
      - ./services/stats/sql/script.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - services/stats/.env

  redis_stats:
    build:
      context: .
      dockerfile: services/stats/.redis/Dockerfile
    expose:
      - 6379

  stats:
    build:
      context: .
      dockerfile: services/stats/Dockerfile
    env_file:
      - services/stats/.env
    expose:
      - 3009
    restart: on-failure
    links:
      - jaeger
      - psql_stats
      - redis_stats
    depends_on:
      - jaeger
      - psql_stats
      - redis_stats

  psql_news:
    image: postgres:12.0-alpine
    expose:
      - 5432
    volumes:
      - psql_news_volume:/var/lib/postgresql/data/
      - ./services/news/sql/script.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - services/news/.env
  redis_news:
    build:
      context: .
      dockerfile: services/news/.redis/Dockerfile
    expose:
      - 6379
  news:
    build:
      context: .
      dockerfile: services/news/Dockerfile
    env_file:
      - services/news/.env
    expose:
      - 3009
    restart: on-failure
    links:
      - jaeger
      - psql_news
      - redis_news
    depends_on:
      - jaeger
      - psql_news
      - redis_news

  accounts:
    build:
      context: .
      dockerfile: services/accounts/Dockerfile
    env_file:
      - services/accounts/.env
    expose:
      - 3009
    restart: on-failure
    links:
      - jaeger
      - psql_accounts
      - redis_accounts
    depends_on:
      - jaeger
      - psql_accounts
      - redis_accounts

  psql_accounts:
    image: postgres:12.0-alpine
    expose:
      - 5432
    volumes:
      - psql_accounts_volume:/var/lib/postgresql/data/
      - ./services/accounts/sql/script.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - services/accounts/.env

  redis_accounts:
    build:
      context: .
      dockerfile: services/accounts/.redis/Dockerfile
    expose:
      - 6379

  comments:
    build:
      context: .
      dockerfile: services/comments/Dockerfile
    env_file:
      - services/comments/.env
    expose:
      - 3009
    restart: on-failure
    links:
      - jaeger
      - psql_comments
      - redis_comments
    depends_on:
      - jaeger
      - psql_comments
      - redis_comments

  psql_comments:
    image: postgres:12.0-alpine
    expose:
      - 5432
    volumes:
      - psql_comments_volume:/var/lib/postgresql/data/
      - ./services/comments/sql/script.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - services/comments/.env

  redis_comments:
    build:
      context: .
      dockerfile: services/comments/.redis/Dockerfile
    expose:
      - 6379

  gateway:
    build:
      context: .
      dockerfile: services/gateway/Dockerfile
    env_file:
      - services/gateway/.env
    ports:
      - 8080:8080
    expose:
      - 8080
    restart: on-failure
    links:
      - jaeger
      - comments
      - accounts
      - news
      - kafka
    depends_on:
      - jaeger
      - comments
      - accounts
      - news
      - kafka

  frontend:
    build:
      context: services/frontend
      dockerfile: Dockerfile
    env_file:
      - services/frontend/.env.local
    command: ["nginx", "-g", "daemon off;"]
    expose:
      - 80
    ports:
      - "8000:80"
    restart: on-failure
    links:
      - gateway
    depends_on:
      - gateway

  jaeger:
    image: jaegertracing/all-in-one:latest
    expose:
      - "14269"
      - "5778"
      - "14268"
      - "14267"
      - "5775/udp"
      - "6831/udp"
      - "6832/udp"
    ports:
      - 16686:16686

volumes:
  psql_stats_volume:
  psql_comments_volume:
  psql_accounts_volume:
  psql_news_volume: